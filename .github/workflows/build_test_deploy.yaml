name: Build Test Deploy

on: [push]

jobs:
  acceptance-tests:
    name: Acceptance Tests
    strategy:
      matrix:
        node-version: [16.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Start services
        run: docker-compose up --build --detach
      - name: Run acceptance tests
        run: npm run acceptance-tests

  gcp-deploy:
    name: Build and Deploy (GCP)
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_SERVICE }}:${{ github.sha }}
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Authorize Docker push
        run: gcloud auth configure-docker
      - name: Build and Push Container
        run: |-
          docker build -t ${{ env.IMAGE }} .
          docker push ${{ env.IMAGE }}
      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy "$PROJECT_ID" \
            --allow-unauthenticated \
            --image "$IMAGE" \
            --region "$REGION"

  integration-tests:
    name: Integration Tests
    strategy:
      matrix:
        go-version: [1.16.x]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Start services
        run: docker-compose up --detach postgres
      - name: Run integration tests
        run: go test ./tests/integration/...

  unit-tests-go:
    name: Unit Tests (Go)
    strategy:
      matrix:
        go-version: [1.16.x]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run unit tests
        run: go test $(go list ./... | grep -v /tests/) -cover

  unit-tests-typescript:
    name: Unit Tests (TypeScript)
    strategy:
      matrix:
        node-version: [16.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm test
